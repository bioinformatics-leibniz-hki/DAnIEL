version: "3.7"
services:
    backend:
        build:
            context: .
            dockerfile: back_end.Dockerfile
            target: production
            args:
                - DANIEL_SCRIPT_DIR=/app/back_end/scripts
                - DANIEL_DB_DIR=/db
                - DANIEL_USERDAT_DIR=/userdat
        image: daniel_backend
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    cpus: "10"
                    memory: "10G"
                reservations:
                    cpus: "10"
                    memory: "5G"
        ports:
            - "9001:22"
        volumes:
            - userdat:/userdat
            - db:/db:ro
        environment:
            - DANIEL_SCRIPT_DIR=/app/back_end/scripts
            - DANIEL_DB_DIR=/db
            - DANIEL_USERDAT_DIR=/userdat
    frontend:
        build:
            context: .
            dockerfile: front_end.Dockerfile
            target: production
        image: daniel_frontend
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
            resources:
                limits:
                    cpus: "2"
                    memory: "5G"
                reservations:
                    cpus: "2"
                    memory: "5G"
        ports:
            - "80:3838"
        volumes:
            - userdat:/userdat
            - db:/db:ro
        environment:
            - DANIEL_DB_DIR=/db
            - DANIEL_USERDAT_DIR=/userdat
volumes:
    db:
        driver: local
        driver_opts:
            type: "none"
            o: "bind"
            device: "${DANIEL_DB_DIR}"
    userdat:
        driver: local
        driver_opts:
            type: "none"
            o: "bind"
            device: "${DANIEL_USERDAT_DIR}"
